syntax = "proto3";

import "common.proto";

package gatesvr;

option go_package = "mua/gatesvr/internal/pb";

enum CallbackType {
  SYNC = 0;
  ASYNC = 1;
  PUSH = 2;
}

message PushRequest {
  string player_id = 1;
  string ip = 2;
  CallbackType cb_type = 3;
  common.GameMessage message = 4;
}

message PushResponse {
  bool success = 1;
  string message = 2;
}

service GateSvr {
  // 踢下线
  rpc KickPlayer(KickPlayerRequest) returns (KickPlayerResponse);
  // 消息转发
  rpc ForwardMessage(ForwardMessageRequest) returns (ForwardMessageResponse);
  // 通知客户端
  rpc PushToClient(PushRequest) returns (PushResponse);
  // 生成鉴权Token
  rpc GenerateAuthToken(GenerateAuthTokenRequest) returns (GenerateAuthTokenResponse);
}

message KickPlayerRequest {
  string player_id = 1;
  string reason = 2;
}

message KickPlayerResponse {
  bool success = 1;
  string message = 2;
}

message ForwardMessageRequest {
  string player_id = 1;
  bytes payload = 2;
}

message ForwardMessageResponse {
  bool success = 1;
  string message = 2;
}

// Token生成请求
message GenerateAuthTokenRequest {
  string player_id = 1;           // 玩家ID（必须）
  string username = 2;            // 用户名（可选）
  int32 level = 3;                // 玩家等级（可选）
  bool is_vip = 4;                // VIP状态（可选）
  repeated string permissions = 5; // 权限列表（可选）
  string platform = 6;            // 平台类型：android/ios/web等（可选）
  string device_id = 7;           // 设备ID（可选）
  int64 expire_hours = 8;         // 过期时间（小时，可选，默认使用配置值）
}

// Token生成响应
message GenerateAuthTokenResponse {
  bool success = 1;               // 生成是否成功
  string token = 2;               // 生成的JWT Token
  int64 expire_time = 3;          // Token过期时间戳（毫秒）
  string error_message = 4;       // 错误信息（失败时）
  int32 error_code = 5;           // 错误码（失败时）
}

// Kafka消息
// 玩家上下线事件类型
enum PlayerStatusEventType {
  ONLINE = 0;  // 上线
  OFFLINE = 1; // 下线
}

// 玩家上下线事件消息
message PlayerStatusChanged {
  string player_id = 1;         // 玩家ID
  string ip = 2;                // 客户端IP地址
  PlayerStatusEventType event = 3; // 事件类型：上线/下线
  int64 event_time = 4;         // 事件时间（时间戳，单位秒或毫秒）
  string gatesvr_id = 5; // 接入服务的实例id
  string gatesvr_ip = 6; // 接入服务的ip地址
  string gatesvr_name = 7; // nacos服务名
  string gatesvr_addr = 8; // nacos注册中心地址rpc服务地址
} 